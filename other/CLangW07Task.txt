Seth Ricks 
Week 07 Task
Brother Sokolowsky
CSE 121C

In my short personal experience programming, I've found that there are a few ways that one can determine if an online source of information is credible or not. The first of 
these I believe to be functionality. In all honesty, if I test the example code that was provided on the source's page and find that it doesn't work, then that means this source 
is most likely not to be trusted in the future. On the other hand, if I find the code to be helpful then that gives me further reasons to continue to trust the source. This could be 
compared to actual test code that we have learned to write in the past. If the test doesn't work, then that means that there is something wrong and we have to change our function. On 
the other hand, if we have througouly tested the code and it passes 100%, then we can have reasonable faith that the code works. Likewise, if a source of information seems to always work 
and answer the questions that we have, then it can be deemed "passable." I've also found that sources that end in .org seem to be more reliable than .com sources, because the latter of 
the two always seems to have pop ups with all sorts of advertisements and request for cookie access. Despite this, .com sources can also be very useful as I have found that they are written 
by ordinary people trying to help others with their programming questions.

These are the five sources that I have personally deemed "reputable." I have determined them to be so because of the reasons that I have listed above, 
and would recommend them for those that will be taking this course in the future.
cppreference.com
stackoverflow.com
freeCodeCamp.org
geeksforgeeks.org
w3schools.com 